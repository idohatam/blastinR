% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/blast_pipeline.R
\name{blast_pipeline}
\alias{blast_pipeline}
\title{Pipeline to Run BLAST Search, Retrieve Hits, Annotate, and Summarize}
\usage{
blast_pipeline(
  infile = file.choose(),
  dbtype = "nucl",
  database_outfile = NULL,
  taxids_file = NULL,
  btype = "blastn",
  qry,
  taxid = FALSE,
  ncores = 2,
  query_ids,
  NumHitseqs = 1,
  retrievSeqs_outfile,
  cut_seq = TRUE,
  MultFiles = FALSE,
  df1,
  id_col,
  summarize_cols,
  reporting = TRUE,
  numt = 1,
  ...
)
}
\arguments{
\item{infile}{Character. Path to the input file used to create the BLAST database. If not provided,
a file dialog box will open.}

\item{dbtype}{Character. BLAST database type. Default is \code{"nucl"}.}

\item{database_outfile}{Character. Optional. File name for the BLAST database. If not provided, the function
will derive a name by removing \code{.fa}, \code{.fasta}, or \code{.txt} from the input file name.}

\item{taxids_file}{Character. Optional path to a taxonomy ID file to include when building the database.}

\item{btype}{Character. BLAST search type (e.g., \code{"blastn"}, \code{"blastp"}). Default is \code{"blastn"}.}

\item{qry}{Character. Path to the FASTA file of query sequences.}

\item{taxid}{Logical. Whether taxonomy IDs were added during database creation. Default is \code{FALSE}.}

\item{ncores}{Integer. Number of threads to use. Default is \code{2}.}

\item{query_ids}{Character vector. Query sequence IDs for which to retrieve hit sequences.}

\item{NumHitseqs}{Integer. Number of hit sequences to retrieve per query. Default is \code{1}.}

\item{retrievSeqs_outfile}{Character. Output file name or prefix for retrieved hit sequences.}

\item{cut_seq}{Logical. If \code{TRUE}, extract only aligned regions of hits. If \code{FALSE}, extract full sequences. Default is \code{TRUE}.}

\item{MultFiles}{Logical. If \code{TRUE}, save hit sequences in separate files for each query ID. Default is \code{FALSE}.}

\item{df1}{Data frame. Metadata table containing additional information (e.g., functional annotation) keyed by taxonomy ID.}

\item{id_col}{Character. Column name in \code{df1} that corresponds to the \code{tax_id} used in the BLAST database.}

\item{summarize_cols}{Character vector. Names of the metadata columns to include in the Sankey plot.}

\item{reporting}{Logical. If \code{TRUE}, saves a report including the BLAST results and Sankey plot. Default is \code{TRUE}.}

\item{numt}{Integer. An optional argument passed to the BLAST wrapper (e.g., for number of top hits to keep). Default is \code{1}.}

\item{...}{Additional arguments passed to internal functions.}
}
\value{
A named list with two elements:
\describe{
\item{blast_results}{A data frame of the parsed BLAST search results.}
\item{summary_plot}{An interactive Sankey plot summarizing metadata for BLAST hits.}
}
}
\description{
This function wraps the entire BLAST workflow in one call: it creates a BLAST database,
performs a BLAST search, retrieves hit sequences, overlays metadata, and generates
a Sankey plot summarizing the results.
}
\examples{
\dontrun{
blast_pipeline(
  infile = "data/sequences.fasta",
  qry = "data/queries.fasta",
  query_ids = c("query1", "query2"),
  retrievSeqs_outfile = "outputs/hits",
  df1 = read.csv("data/metadata.csv"),
  id_col = "tax_id",
  summarize_cols = c("Function", "Pathway"),
  reporting = TRUE
)
}
}
